"""users table

Revision ID: 73fd7c6bc4a2
Revises: 2458e7d56d38
Create Date: 2024-05-16 21:47:57.134746

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '73fd7c6bc4a2'
down_revision = '2458e7d56d38'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('answers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['id'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), nullable=False))
        batch_op.drop_index('ix_questions_title')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['id'], ['id'])
        batch_op.drop_column('user_id')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_index('ix_tags_category')
        batch_op.drop_index('ix_tags_tag')
        batch_op.create_unique_constraint(None, ['tag'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.Integer(), autoincrement=True, nullable=False))
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=30),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
        batch_op.drop_column('user_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=False))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=30),
               nullable=False)
        batch_op.drop_column('id')

    with op.batch_alter_table('tags', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('ix_tags_tag', ['tag'], unique=1)
        batch_op.create_index('ix_tags_category', ['category'], unique=False)

    with op.batch_alter_table('questions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])
        batch_op.create_index('ix_questions_title', ['title'], unique=False)
        batch_op.drop_column('id')

    with op.batch_alter_table('answers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['user_id'])
        batch_op.drop_column('id')

    # ### end Alembic commands ###
